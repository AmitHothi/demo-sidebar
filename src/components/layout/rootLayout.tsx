'use client'; // Mark this component as a client component

import { useState } from 'react';
import {
  ResizablePanelGroup,
  ResizablePanel,
  ResizableHandle,
} from '@/components/ui/resizable';
// import { SidebarTrigger } from '@/components/ui/sidebar';
import { AppSidebar } from '@/components/app-sidebar';
import { TooltipProvider } from '../ui/tooltip';

const Layout = ({ children }: { children: React.ReactNode }) => {
  const [isCollapsed, setIsCollapsed] = useState(false);

  return (
    <TooltipProvider delayDuration={0}>
      <ResizablePanelGroup
        direction='horizontal'
        onLayout={(sizes: number[]) => {
          document.cookie = `react-resizable-panels:layout:mail=${JSON.stringify(
            sizes
          )}`;
        }} // Check if the panel is collapsed
      >
        <ResizablePanel
          defaultSize={15}
          collapsible={true}
          collapsedSize={4}
          minSize={12}
          maxSize={20}
          onCollapse={() => {
            setIsCollapsed(true);
            document.cookie = `react-resizable-panels:collapsed=${JSON.stringify(
              true
            )}`;
          }}
          onResize={() => {
            setIsCollapsed(false);
            document.cookie = `react-resizable-panels:collapsed=${JSON.stringify(
              false
            )}`;
          }}
          className={`${isCollapsed ? 'collapsed' : ''}`}
        >
          <AppSidebar isCollapsed={isCollapsed} /> {/* Pass isCollapsed to the sidebar */}
        </ResizablePanel>
        <ResizableHandle withHandle />
        <ResizablePanel defaultSize={80}>
          <main className='flex flex-1 flex-col p-2 transition-all duration-300 ease-in-out '>
            <div className='h-full rounded-md border-2 border-dashed p-2'>
              {/* <SidebarTrigger /> */}
              {children}
            </div>
          </main>
        </ResizablePanel>
      </ResizablePanelGroup>
    </TooltipProvider>
  );
};

export default Layout;


// import type { Metadata } from 'next'
// import localFont from 'next/font/local'
// import './globals.css'
// // import { SidebarTrigger } from '@/components/ui/sidebar'
// // import { AppSidebar } from '@/components/app-sidebar'
// // import { ResizablePanelGroup, ResizablePanel, ResizableHandle } from "@/components/ui/resizable"
// // import { useState } from 'react'
// import Layout from '@/components/layout/rootLayout'

// const geistSans = localFont({
//   src: './fonts/GeistVF.woff',
//   variable: '--font-geist-sans',
//   weight: '100 900',
// })

// const geistMono = localFont({
//   src: './fonts/GeistMonoVF.woff',
//   variable: '--font-geist-mono',
//   weight: '100 900',
// })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode
// }>) {
//   return(<html lang='en'>
//     <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//       <Layout >
//         {children}
//       </Layout>
//     </body>
//   </html>)
//   // const { cookies } = await import('next/headers')
//   // const isSidebarOpen = cookies().get('sidebar:state')?.value === 'true'
//   // return (
//   //   <html lang="en">
//   //     <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//   //       <ResizablePanelGroup direction="horizontal">
//   //         <ResizablePanel
//   //           defaultSize={15}
//   //           collapsible={true}
//   //           collapsedSize={4}
//   //           minSize={12}
//   //           maxSize={18}
//   //           className={`${isSidebarOpen ? '' : 'collapsed'}`}
//   //           // className={`${isSidebarOpen ? '' : 'collapsed'}`}
//   //           // onChange={(size) => setIsCollapsed(size === 4)}
//   //         >
//   //           <AppSidebar />
//   //         </ResizablePanel>
//   //         <ResizableHandle withHandle />
//   //         <ResizablePanel defaultSize={80}>
//   //           <main className="flex flex-1 flex-col p-2 transition-all duration-300 ease-in-out h-screen">
//   //             <div className="h-full rounded-md border-2 border-dashed p-2">
//   //               <SidebarTrigger />
//   //               {children}
//   //             </div>
//   //           </main>
//   //         </ResizablePanel>
//   //       </ResizablePanelGroup>
//   //     </body>
//   //   </html>
//   // )
// }
